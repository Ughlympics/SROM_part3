#include "Polynom.h"
#include <iostream>

int main()
{
    Polynom f("01110001011100000100110010001000100110101001110100110111111101010000001110111011011000000101100011111101101101001011111111010100001011011000010110000011110100011010110001101001000000010011000001101110000100110110110000001010011100000110001101101111010001000010111000101011101111010011100000000100111100100010011110101100010000101111010101010001111100100110001101001110000001101000011101101110010011000100111010101100100010000010111000110111111");
    Polynom s("11111100100010001101100111110010001110011101110011001000110000001100101100100100110011101000000111000111000011011000111010100010110000010010011110100001010110110100000000111000000010110100010101110001110101010010101110001100111001100001111111111111110011110000110101110010001000010110001001000100001110000011011100010010011010010011001101010111000101000100000011001100000010010010000011100101110111111100011100110101110110000110011110110111111");
    Polynom n("00000001111000100010001100001011011100010110110011011010100000011111001100111010001110110011111101001001110110001000000010100000011100100011001010010101110100000011110001110001010110101010011101110111011101101111110111010011001101000100011000001011001011011110001010101110011100010000001001100011100001111111001010111000111101111101110110101011010011000110110010111000010001000001001111111110110110100001111100001010011010000111100101100010100");
    Polynom add, mul, inv;

    add = f + s;
    mul = f * s;
    Polynom sq = f.square();
    Polynom trace_pol = f.trace(f);
    inv = f.inverse();
    Polynom power = f.pow(n);


    std::cout << "First pol: " << f.toBitString() << std::endl;
    std::cout << "Second pol: " << s.toBitString() << std::endl;
    std::cout << "ADDResult: " << add.toBitString() << std::endl;
    std::cout << "MULResult: " << mul.toBitString() << std::endl;
    std::cout << "SQResult: " << sq.toBitString() << std::endl;
    std::cout << "TRResult: " << trace_pol.toBitString() << std::endl;
    std::cout << "Inverse Result: " << inv.toBitString() << std::endl;
    std::cout << "Power Result: " << power.toBitString() << std::endl;
}


